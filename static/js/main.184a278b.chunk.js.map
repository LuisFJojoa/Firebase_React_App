{"version":3,"sources":["components/HomePage.jsx","config/configFirebase.js","services/firebaseconfig.js","components/LoginPage.jsx","components/Menu.jsx","components/Product.jsx","App.jsx","index.js"],"names":["HomePage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","fire","firebase","initializeApp","auth","store","firestore","LoginPage","record","useHistory","useState","email","setEmail","password","setPassword","msgError","setMsgError","className","onSubmit","e","preventDefault","createUserWithEmailAndPassword","then","response","push","catch","err","code","onChange","target","value","placeholder","type","onClick","signInWithEmailAndPassword","console","log","Menu","user","setUser","useEffect","onAuthStateChanged","to","signOut","Product","productName","setProductName","productPrice","setProductPrice","products","setProducts","statusUpdate","setStatusUpdate","textBtnForm","setTextBtnForm","updateProductId","setUpdateProductId","getAllProducts","a","collection","get","docs","productsArray","map","item","id","data","createProduct","trim","product","name","price","add","setFields","deleteProduct","productId","doc","delete","updateProduct","set","getUpdateProduct","queryResult","length","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAUeA,EARE,WACb,OACI,8BACI,mD,gBCQGC,G,YAVQ,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCJbC,EAAOC,IAASC,cAAcV,GAC9BW,EAAOH,EAAKG,OACLC,EAAQJ,EAAKK,YAEXF,IC0FAG,EAhGG,WAEd,IAAMC,EAASC,cAFK,EAGMC,mBAAS,IAHf,mBAGbC,EAHa,KAGNC,EAHM,OAIYF,mBAAS,IAJrB,mBAIbG,EAJa,KAIHC,EAJG,OAKYJ,mBAAS,MALrB,mBAKbK,EALa,KAKHC,EALG,KA+CpB,OACI,sBAAKC,UAAU,WAAf,UACI,qBAAKA,UAAU,QACf,sBAAKA,UAAU,MAAf,UACI,uBAAMC,SA5CG,SAACC,GAClBA,EAAEC,iBAEFhB,EAAKiB,+BAA+BV,EAAOE,GAC1CS,MAAK,SAAAC,GACFf,EAAOgB,KAAK,QAEfC,OAAM,SAAAC,GAGa,sBAAZA,EAAIC,MACJX,EAAY,sBAGA,sBAAZU,EAAIC,MACJX,EAAY,4CA6BkBC,UAAU,aAAxC,UACI,uBACAW,SAAU,SAACT,GACPP,EAASO,EAAEU,OAAOC,QAEtBb,UAAU,eACVc,YAAY,kBACZC,KAAK,UAEL,uBACAJ,SAAU,SAACT,GACPL,EAAYK,EAAEU,OAAOC,QAEzBb,UAAU,oBACVc,YAAY,qBACZC,KAAK,aAEL,uBACAf,UAAU,8BACVa,MAAQ,gBACRE,KAAK,cAET,wBACAf,UAAU,4BACVgB,QAhDM,WACd7B,EAAK8B,2BAA2BvB,EAAOE,GACtCS,MAAK,SAAAC,GACFf,EAAOgB,KAAK,QAEfC,OAAM,SAAAC,GAGHS,QAAQC,IAAIV,GACI,uBAAZA,EAAIC,MACJX,EAAY,gCAGA,uBAAZU,EAAIC,MACJX,EAAY,kCAgCZ,mBAMgB,MAAZD,EAEI,qBAAKE,UAAU,wDAAf,SACKF,IAKN,4BAIX,qBAAKE,UAAU,YC9BZoB,EA7DF,WAET,IAAM7B,EAASC,cAFA,EAGSC,mBAAS,MAHlB,mBAGR4B,EAHQ,KAGFC,EAHE,KAKfC,qBAAU,WACNpC,EAAKqC,oBAAoB,SAACH,GAClBA,GACAC,EAAQD,EAAK3B,YAGvB,IAOF,OACI,8BACI,sBAAKM,UAAU,8CAAf,UACI,oBAAIA,UAAU,qBAAd,SAEQqB,EAEI,qCACI,oBAAIrB,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWyB,GAAG,IAA9B,oBAEJ,6BACI,cAAC,IAAD,CAAMzB,UAAU,WAAWyB,GAAG,WAA9B,0BAMR,6BACI,cAAC,IAAD,CAAMzB,UAAU,WAAWyB,GAAG,SAA9B,uBAMZJ,EAEI,wBACIL,QAjCT,WACX7B,EAAKuC,UACLJ,EAAQ,MACR/B,EAAOgB,KAAK,WA+BQP,UAAU,iBAFd,oBAQA,+B,iCCoJT2B,EA3MC,WAAO,IAAD,EAEoBlC,mBAAS,IAF7B,mBAEXmC,EAFW,KAEEC,EAFF,OAGsBpC,mBAAS,IAH/B,mBAGXqC,EAHW,KAGGC,EAHH,OAIctC,mBAAS,IAJvB,mBAIXuC,EAJW,KAIDC,EAJC,OAKcxC,mBAAS,MALvB,mBAKXK,EALW,KAKDC,EALC,OAMsBN,oBAAS,GAN/B,mBAMXyC,EANW,KAMGC,EANH,OAOoB1C,mBAAS,kBAP7B,mBAOX2C,EAPW,KAOEC,EAPF,OAQ4B5C,mBAAS,IARrC,mBAQX6C,EARW,KAQMC,EARN,KAUZC,EAAc,uCAAG,gCAAAC,EAAA,sEACErD,EAAMsD,WAAW,YAAYC,MAD/B,gBACZC,EADY,EACZA,KACDC,EAAgBD,EAAKE,KAAK,SAAAC,GAAI,oBAChCC,GAAGD,EAAKC,IACLD,EAAKE,WAGZhB,EAAYY,GAPO,2CAAH,qDAUpBtB,qBAAW,WACPiB,MACF,IAGF,IAAMU,EAAa,uCAAG,WAAOhD,GAAP,eAAAuC,EAAA,6DAElBvC,EAAEC,iBACGyB,EAAYuB,QACbpD,EAAY,4CAGX+B,EAAaqB,QACdpD,EAAY,8CAGVqD,EAAU,CACZC,KAAMzB,EACN0B,MAAOxB,GAbO,kBAiBK1C,EAAMsD,WAAW,YAAYa,IAAIH,GAjBtC,cAkBdZ,IAlBc,kDAqBdtB,QAAQC,IAAR,MArBc,QAwBlBqC,IAxBkB,0DAAH,sDA4BbC,EAAa,uCAAG,WAAOC,GAAP,SAAAjB,EAAA,+EAERrD,EAAMsD,WAAW,YAAYiB,IAAID,GAAWE,SAFpC,OAGdpB,IAHc,uGAAH,sDAUbqB,EAAa,uCAAG,WAAO3D,GAAP,eAAAuC,EAAA,6DAElBvC,EAAEC,iBACGyB,EAAYuB,QACbpD,EAAY,4CAGX+B,EAAaqB,QACdpD,EAAY,8CAGVqD,EAAU,CACZC,KAAMzB,EACN0B,MAAOxB,GAbO,kBAiBR1C,EAAMsD,WAAW,YAAYiB,IAAIrB,GAAiBwB,IAAIV,GAjB9C,OAkBdjB,GAAgB,GAChBE,EAAe,kBACfG,IACAD,EAAmB,IArBL,0DA2BlBiB,IA3BkB,0DAAH,sDA8BbO,EAAgB,uCAAG,WAAOL,GAAP,qBAAAjB,EAAA,+EAESrD,EAAMsD,WAAW,YAAYiB,IAAID,GAAWf,MAFrD,OAEXqB,EAFW,OAGjB9C,QAAQC,IAAI6C,EAAYf,QAHP,EAIWe,EAAYf,OAJvB,EAITD,GAAIK,EAJK,EAILA,KAAMC,EAJD,EAICA,MAClBf,EAAmBmB,GACnB3B,EAAgBuB,GAChBzB,EAAewB,GACflB,GAAgB,GAChBE,EAAe,kBATE,kDAajBnB,QAAQC,IAAR,MAbiB,0DAAH,sDAiBhBqC,EAAY,WACd3B,EAAe,IACfE,EAAgB,KAGpB,OACI,sBAAK/B,UAAU,WAAf,UACI,qBAAKA,UAAU,QACf,sBAAKA,UAAU,QAAf,UACI,sDACA,uBAAMC,SAAUiC,EAAe2B,EAAcX,EAAelD,UAAU,aAAtE,UACI,uBACAa,MAAOe,EACPjB,SAAU,SAACT,GACP2B,EAAe3B,EAAEU,OAAOC,QAE5Bb,UAAU,oBACVc,YAAY,oBACZC,KAAK,SAEL,uBACAF,MAAOiB,EACPnB,SAAU,SAACT,GACP6B,EAAgB7B,EAAEU,OAAOC,QAE7Bb,UAAU,oBACVc,YAAY,uBACZC,KAAK,SAGD,uBACAf,UAAU,8BACVa,MAAK,UAAOuB,GACZrB,KAAK,cAKG,MAAZjB,EAEI,qBAAKE,UAAU,wDAAf,SACKF,IAKN,4BAIX,sBAAKE,UAAU,QAAf,UACI,gDACA,oBAAIA,UAAU,aAAd,SAE4B,IAApBgC,EAASiC,OAELjC,EAASc,KAAK,SAAAM,GAAO,OACjB,qBACApD,UAAU,kBADV,UAGKoD,EAAQC,KAHb,QAGwBD,EAAQE,MAC5B,wBACAtC,QAAS,WACTyC,EAAcL,EAAQJ,KAEtBhD,UAAU,6BAJV,oBAOA,wBACAgB,QAAS,WACT+C,EAAiBX,EAAQJ,KAEzBhD,UAAU,gCAJV,sBATCoD,EAAQJ,OAqBjB,sBAAMhD,UAAU,GAAhB,0DAQhB,qBAAKA,UAAU,YC9KZkE,MAff,WACE,OACE,qBAAKlE,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmE,OAAK,EAACC,KAAK,KAAKC,UAAW9F,IAClC,cAAC,IAAD,CAAQ6F,KAAK,YAAYC,UAAW1C,IACpC,cAAC,IAAD,CAAQyC,KAAK,UAAUC,UAAW/E,a,MCd5CgF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.184a278b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <h2>Home Page Icon</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA5kfpbPySeR1mCt5zGibom_uz32XDDS2Q\",\r\n    authDomain: \"react-auth-storage.firebaseapp.com\",\r\n    projectId: \"react-auth-storage\",\r\n    storageBucket: \"react-auth-storage.appspot.com\",\r\n    messagingSenderId: \"484658456170\",\r\n    appId: \"1:484658456170:web:d6b46070cbed4146758c13\",\r\n    measurementId: \"G-PYSZLV7GGN\"\r\n}\r\n\r\nexport default firebaseConfig","import firebase from \"firebase\"\r\nimport 'firebase/firebase-storage'\r\nimport 'firebase/auth'\r\nimport firebaseConfig from '../config/configFirebase'\r\n\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nconst auth = fire.auth();\r\nexport const store = fire.firestore();\r\n\r\nexport default auth","import React, {useState} from 'react'\r\nimport auth from '../services/firebaseconfig'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst LoginPage = () => {\r\n\r\n    const record = useHistory()\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [msgError, setMsgError] = useState(null)\r\n\r\n    const RegisterUser = (e)=>{\r\n        e.preventDefault()\r\n        \r\n        auth.createUserWithEmailAndPassword(email, password)\r\n        .then(response => {\r\n            record.push('/')\r\n        })\r\n        .catch(err => {\r\n            /* auth/invalid-email */\r\n            /* auth/weak-password */\r\n            if (err.code == 'auth/invalid-email') {\r\n                setMsgError('Wrong Format email')\r\n            }\r\n\r\n            if (err.code == 'auth/weak-password'){\r\n                setMsgError('Wrong Password, It must have 6 chars')\r\n            }\r\n        })\r\n    }\r\n\r\n    const LoginUser = () => {\r\n        auth.signInWithEmailAndPassword(email, password)\r\n        .then(response => {\r\n            record.push('/')\r\n        })\r\n        .catch(err => {\r\n            /* auth/invalid-email */\r\n            /* auth/password-incorrect */\r\n            console.log(err);\r\n            if (err.code == 'auth/user-not-found') {\r\n                setMsgError('Wrong user email, try again.')\r\n            }\r\n\r\n            if (err.code == 'auth/wrong-password'){\r\n                setMsgError('Wrong Password, try again.')\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col\"></div>\r\n            <div className=\"col\">\r\n                <form onSubmit={RegisterUser} className=\"form-group\">\r\n                    <input \r\n                    onChange={(e)=>{\r\n                        setEmail(e.target.value)\r\n                    }}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Type your email\"\r\n                    type=\"email\"\r\n                    />\r\n                    <input \r\n                    onChange={(e)=>{\r\n                        setPassword(e.target.value)\r\n                    }}\r\n                    className=\"form-control mt-4\"\r\n                    placeholder=\"Type your password\"\r\n                    type=\"password\"\r\n                    />\r\n                    <input \r\n                    className=\"btn btn-dark btn-block mt-4\"\r\n                    value = \"Register user\"\r\n                    type=\"submit\"/>\r\n                </form>\r\n                <button \r\n                className=\"btn btn-success btn-block\"\r\n                onClick= {LoginUser}>\r\n                    Login\r\n                </button>\r\n                {\r\n                    msgError != null ?\r\n                    (\r\n                        <div className=\"alert alert-danger mt-3 d-flex justify-content-center\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                    :\r\n                    (\r\n                       <span></span>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"col\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport auth from '../services/firebaseconfig'\r\n\r\nconst Menu = () => {\r\n\r\n    const record = useHistory()\r\n    const [user, setUser] = useState(null)\r\n\r\n    useEffect(() =>{\r\n        auth.onAuthStateChanged ((user) => {\r\n            if (user) {\r\n                setUser(user.email)\r\n            }\r\n        })\r\n    },[])\r\n\r\n    const LogOut = () => {\r\n        auth.signOut()\r\n        setUser(null)\r\n        record.push('/login')\r\n    }\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    {\r\n                        user ?\r\n                        (\r\n                            <>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to='/'>Home</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link className=\"nav-link\" to='/product'>Product</Link>\r\n                                </li>\r\n                            </>\r\n                        )\r\n                        :\r\n                        (\r\n                            <li>\r\n                                <Link className=\"nav-link\" to='/login'>Login</Link>\r\n                            </li>\r\n                        )\r\n                    }     \r\n                </ul>\r\n                {\r\n                    user ?\r\n                    (\r\n                        <button \r\n                            onClick={LogOut}\r\n                            className=\"btn btn-danger\">\r\n                            Logout\r\n                        </button>\r\n                    )\r\n                    :\r\n                    (\r\n                        <span></span>\r\n                    )\r\n                }\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import React, {useState, useEffect} from 'react'\r\nimport {store} from '../services/firebaseconfig'\r\nconst Product = () => {\r\n\r\n    const [productName, setProductName] = useState('')\r\n    const [productPrice, setProductPrice] = useState('')\r\n    const [products, setProducts] = useState([])\r\n    const [msgError, setMsgError] = useState(null)\r\n    const [statusUpdate, setStatusUpdate] = useState(false)\r\n    const [textBtnForm, setTextBtnForm] = useState('Create Product')\r\n    const [updateProductId, setUpdateProductId] = useState('')\r\n\r\n    const getAllProducts = async()=> {\r\n        const {docs} = await store.collection('products').get()\r\n        const productsArray = docs.map( item => ({\r\n            id:item.id,\r\n            ...item.data()\r\n        }))\r\n        //console.log(productsArray);\r\n        setProducts(productsArray)\r\n    }\r\n\r\n    useEffect( () => {\r\n        getAllProducts()\r\n    },[])\r\n\r\n\r\n    const createProduct = async (e) => {\r\n        \r\n        e.preventDefault()\r\n        if (!productName.trim()) {\r\n            setMsgError('Field product name is empty, please type')\r\n        }\r\n\r\n        if (!productPrice.trim()) {\r\n            setMsgError('Field product price is empty, please type.')\r\n        }\r\n\r\n        const product = {\r\n            name: productName,\r\n            price: productPrice\r\n        }\r\n\r\n        try {\r\n            const data = await store.collection('products').add(product)\r\n            getAllProducts()\r\n            //console.log(\"Product created\")\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n        setFields()\r\n    }\r\n\r\n\r\n    const deleteProduct = async (productId) => {\r\n        try {\r\n            await store.collection('products').doc(productId).delete()\r\n            getAllProducts()\r\n            \r\n        } catch (e) {\r\n            \r\n        }\r\n    }\r\n\r\n    const updateProduct = async (e) => {\r\n\r\n        e.preventDefault()\r\n        if (!productName.trim()) {\r\n            setMsgError('Field product name is empty, please type')\r\n        }\r\n\r\n        if (!productPrice.trim()) {\r\n            setMsgError('Field product price is empty, please type.')\r\n        }\r\n\r\n        const product = {\r\n            name: productName,\r\n            price: productPrice\r\n        }\r\n        \r\n        try {\r\n            await store.collection('products').doc(updateProductId).set(product)\r\n            setStatusUpdate(false)\r\n            setTextBtnForm('Create product')\r\n            getAllProducts()\r\n            setUpdateProductId('')\r\n            \r\n        } catch (e) {\r\n            \r\n        }\r\n        \r\n        setFields()\r\n    }\r\n\r\n    const getUpdateProduct = async (productId) => {\r\n        try {\r\n            const queryResult = await store.collection('products').doc(productId).get()\r\n            console.log(queryResult.data());\r\n            const { id, name, price } = queryResult.data()\r\n            setUpdateProductId(productId)\r\n            setProductPrice(price)\r\n            setProductName(name)\r\n            setStatusUpdate(true)\r\n            setTextBtnForm('Update product')\r\n            \r\n            \r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const setFields = () => {\r\n        setProductName('')\r\n        setProductPrice('')\r\n    }\r\n    \r\n    return (\r\n        <div className=\"row mt-3\">\r\n            <div className=\"col\"></div>\r\n            <div className=\"col-4\">\r\n                <h2>Create a new product</h2>\r\n                <form onSubmit={statusUpdate ? updateProduct:createProduct} className=\"form-group\">\r\n                    <input \r\n                    value={productName}\r\n                    onChange={(e)=>{\r\n                        setProductName(e.target.value)\r\n                    }}\r\n                    className=\"form-control mt-4\"\r\n                    placeholder=\"Type product name\"\r\n                    type=\"text\"\r\n                    />\r\n                    <input \r\n                    value={productPrice}\r\n                    onChange={(e)=>{\r\n                        setProductPrice(e.target.value)\r\n                    }}\r\n                    className=\"form-control mt-4\"\r\n                    placeholder=\"Type product price $\"\r\n                    type=\"text\"\r\n                    />\r\n                    {\r\n                        <input \r\n                        className=\"btn btn-dark btn-block mt-4\"\r\n                        value = {`${textBtnForm}`}\r\n                        type=\"submit\"/>\r\n                    }\r\n                    \r\n                </form>\r\n                {\r\n                    msgError != null ?\r\n                    (\r\n                        <div className=\"alert alert-danger mt-3 d-flex justify-content-center\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                    :\r\n                    (\r\n                       <span></span>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"col-4\">\r\n                <h2>Product's list</h2>\r\n                <ul className=\"list-group\">\r\n                    {\r\n                        products.length !== 0 ?\r\n                        (\r\n                            products.map( product =>(\r\n                                <li \r\n                                className=\"list-group-item\"\r\n                                key={product.id}>\r\n                                    {product.name} -- ${product.price}\r\n                                    <button \r\n                                    onClick={() =>{\r\n                                    deleteProduct(product.id);\r\n                                    }} \r\n                                    className=\"btn btn-danger float-right\">\r\n                                        Delete\r\n                                    </button>\r\n                                    <button \r\n                                    onClick={() =>{\r\n                                    getUpdateProduct(product.id)\r\n                                    }} \r\n                                    className=\"btn btn-info float-right mr-1\">\r\n                                        Update\r\n                                    </button>\r\n                                </li>\r\n                            ))\r\n                        )\r\n                        :\r\n                        (\r\n                            <span className=\"\">Currently there is not products at list</span>\r\n                        )\r\n                    }\r\n                        \r\n                </ul>\r\n                    \r\n                \r\n            </div>\r\n            <div className=\"col\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react';\nimport { \n    BrowserRouter as Router, \n    Route, \n    Switch \n  } from 'react-router-dom'\nimport HomePage from './components/HomePage'\nimport LoginPage from './components/LoginPage'\nimport Menu from './components/Menu'\nimport Product from './components/Product';\n\nfunction App() {\n  return (\n    <div className=\"Container\" >\n      <Router>\n        <Menu></Menu>\n        <Switch>\n          <Route exact path='./' component={HomePage}></Route>\n          <Route  path='./product' component={Product}></Route>\n          <Route  path='./login' component={LoginPage}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport bootstrap from 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}